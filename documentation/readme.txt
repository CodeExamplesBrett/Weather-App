Here are the steps to install Compodoc for an Angular project when using VSCode:

Install Compodoc: Open your terminal and navigate to your project's root directory. Then, run the following command to install Compodoc globally:



npm install -g @compodoc/compodoc



This will install Compodoc globally on your machine.

Generate documentation: Once you have installed Compodoc, you can generate the documentation for your Angular project by running the following command:



npx compodoc -p tsconfig.json -s



This command tells Compodoc to generate the documentation using the TypeScript configuration file (tsconfig.json) and to serve the documentation on http://localhost:8080.

This will generate the documentation and open it in your default browser. If the browser does not open automatically, you can navigate to http://localhost:8080 in your browser to view the documentation.

View and customize documentation: The documentation generated by Compodoc is highly customizable, and you can modify the configuration to suit your needs. You can find more information on customizing the documentation on the official Compodoc documentation site.

That's it! You now have Compodoc installed for your Angular project and can generate and customize documentation for your code.



findHighestMaxAndLowestMin(tempMaxMinData) {
    const results = [];

    // Initialize variables to hold the highest max and lowest min for each day
    let currentDate: string | undefined;
    let highestMax: number | undefined;
    let lowestMin: number | undefined;

    
    // Loop through the weather data
    for (const datum of tempMaxMinData) {
      const date = datum.dt_txt.slice(0, 10); // Extract the date from the date-time string.. first 10char
      
      if (date !== currentDate) {
        // If the date has changed, push the previous day's results into the array.. initally undef 
        if (currentDate) {  //only run if currentDate is not undefined
          results.push({
            date: currentDate,
            highestMax: highestMax,
            lowestMin: lowestMin,
          });
        }

        // Reset the variables for the new day
        currentDate = date;
        highestMax = undefined;
        lowestMin = undefined;
      }

      // Update the highest max and lowest min for the current day
      if (highestMax === undefined || datum.main.temp_max > highestMax) {
        highestMax = datum.main.temp_max;
      }
      if (lowestMin === undefined || datum.main.temp_min < lowestMin) {
        lowestMin = datum.main.temp_min;
      }
    }

    // Push the results for the last day
    if (currentDate) {
      results.push({
        date: currentDate,
        highestMax: highestMax,
        lowestMin: lowestMin,
      });
    }

    return results;
  }

