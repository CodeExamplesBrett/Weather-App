var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.736,1,0.736]],["body/components/AppComponent.html",[0,1.22,1,1.284,2,2.099,3,1.333,4,1.081,5,2.071,6,2.071,7,2.071,8,2.071,9,1.081,10,2.071,11,2.071,12,3.054,13,2.108,14,3.454,15,2.637,16,3.8,17,2.637,18,3.454,19,1.333,20,1.697,21,3.8,22,1.333,23,0.082,24,2.071,25,1.649,26,1.649,27,1.867,28,2.071,29,2.713,30,1.333,31,1.081,32,1.333,33,1.333,34,2.071,35,2.637,36,2.637,37,2.071,38,3.054,39,2.071,40,2.099,41,2.071,42,0.871,43,2.071,44,2.071,45,2.071,46,0.063,47,0.063]],["title/modules/AppModule.html",[48,1.751,49,1.127]],["body/modules/AppModule.html",[1,1.43,3,1.298,4,1.053,9,1.053,13,1.844,23,0.084,27,1.298,30,2.013,31,1.053,32,1.298,33,1.298,42,1.346,46,0.062,47,0.062,49,2.176,50,1.053,51,1.668,52,2.018,53,2.018,54,2.018,55,2.018,56,1.67,57,2.593,58,1.606,59,1.298,60,2.643,61,3.396,62,2.593,63,3.396,64,2.593,65,3.396,66,2.018,67,1.606,68,2.643,69,2.643,70,1.606,71,2.643,72,2.643]],["title/modules/AppRoutingModule.html",[48,1.751,56,0.914]],["body/modules/AppRoutingModule.html",[3,1.571,4,1.273,9,1.273,23,0.083,30,1.878,31,1.273,32,1.571,33,1.571,46,0.069,47,0.069,50,1.273,56,1.522,62,2.441,64,2.918,73,3.197,74,3.197,75,3.822,76,2.484,77,2.441,78,2.441,79,3.197,80,3.197]],["title/components/WeatherAppMainComponent.html",[0,0.736,42,0.736]],["body/components/WeatherAppMainComponent.html",[0,0.696,1,0.163,2,0.559,3,0.25,4,0.203,5,0.389,6,0.389,7,0.389,8,0.389,9,0.203,11,0.389,12,1.176,13,2.098,15,0.702,17,0.702,19,0.757,20,0.452,22,1.648,23,0.084,24,1.518,25,1.643,26,1.643,27,1.648,28,2.817,30,0.25,31,0.203,32,0.25,33,0.25,34,0.389,35,0.702,36,0.702,37,0.389,38,1.176,39,0.389,40,1.499,41,0.389,42,0.495,43,1.777,44,0.389,45,0.389,46,0.055,47,0.017,58,0.559,59,0.452,70,2.259,78,1.978,81,2.839,82,0.389,83,0.702,84,1.258,85,1.258,86,1.541,87,1.541,88,1.258,89,1.258,90,3.354,91,1.782,92,0.92,93,1.258,94,1.782,95,1.258,96,0.92,97,3.446,98,1.258,99,3.487,100,1.782,101,0.92,102,1.541,103,0.92,104,1.258,105,1.258,106,1.258,107,1.782,108,1.541,109,1.989,110,0.92,111,1.258,112,0.92,113,0.92,114,0.92,115,0.92,116,1.258,117,0.509,118,0.509,119,3.446,120,0.92,121,0.92,122,1.258,123,2.895,124,1.782,125,0.92,126,1.782,127,3.248,128,2.703,129,0.92,130,0.509,131,1.258,132,3.124,133,3.303,134,1.541,135,1.258,136,2.169,137,2.169,138,0.92,139,0.92,140,0.509,141,0.92,142,2.169,143,1.258,144,1.541,145,2.169,146,1.258,147,1.782,148,2.895,149,0.92,150,3.248,151,0.92,152,0.92,153,1.989,154,0.509,155,1.541,156,0.389,157,2.467,158,2.591,159,1.782,160,0.509,161,0.509,162,0.92,163,0.92,164,0.92,165,0.92,166,0.92,167,0.509,168,0.509,169,0.92,170,0.92,171,0.92,172,1.258,173,0.92,174,1.541,175,1.258,176,0.92,177,0.509,178,0.92,179,0.92,180,0.92,181,0.509,182,0.509,183,0.509,184,0.509,185,0.509,186,0.509,187,0.92,188,0.92,189,0.509,190,0.92,191,0.92,192,0.92,193,0.92,194,0.92,195,1.541,196,0.92,197,0.509,198,2.703,199,0.92,200,0.509,201,3.401,202,0.509,203,0.509,204,1.782,205,0.509,206,0.509,207,1.258,208,0.92,209,0.509,210,0.92,211,1.176,212,0.509,213,0.92,214,1.541,215,0.92,216,1.541,217,1.541,218,0.92,219,1.258,220,0.509,221,0.92,222,0.509,223,0.509,224,0.509,225,0.764,226,0.509,227,0.509,228,0.509,229,0.509,230,0.702,231,0.509,232,0.509,233,0.509,234,0.509,235,0.509,236,0.509,237,0.509,238,0.509,239,0.509,240,0.509,241,0.509,242,0.509,243,0.509,244,0.509,245,0.509,246,0.92,247,0.509,248,0.509,249,0.509,250,0.92,251,0.509,252,0.509,253,0.509,254,0.92,255,0.509,256,0.509,257,0.509,258,0.509,259,1.541,260,0.509,261,0.92,262,0.509,263,0.509,264,0.509,265,0.509,266,0.509,267,0.509,268,0.509,269,0.509,270,0.509,271,2.895,272,1.36,273,0.509,274,0.92,275,0.509,276,0.509,277,0.509,278,0.92,279,0.509,280,0.509,281,0.509,282,0.509,283,0.509,284,0.509,285,0.509,286,0.509,287,0.509,288,0.509,289,0.509,290,0.509,291,0.509,292,0.509,293,0.509,294,0.92,295,0.509,296,0.509,297,0.509,298,2.094,299,0.509,300,0.509,301,0.92,302,0.509,303,0.509,304,0.509,305,0.509,306,0.509,307,0.509,308,0.509,309,0.509,310,0.509,311,0.509,312,0.509,313,0.509,314,0.92,315,0.509,316,0.509,317,0.509,318,0.509,319,0.92,320,0.309,321,0.509,322,1.541,323,0.92,324,0.509,325,0.509,326,0.92,327,0.509,328,0.509,329,0.92,330,0.509,331,0.92,332,1.541,333,0.92,334,0.92,335,0.92,336,0.92,337,0.92,338,0.92,339,2.591,340,1.989,341,0.92,342,0.92,343,0.92,344,0.92,345,0.92,346,1.541,347,1.541,348,0.509,349,1.541,350,0.92,351,0.92,352,0.92,353,1.782,354,1.782,355,1.258,356,1.782,357,0.509,358,1.541,359,1.541,360,1.258,361,2.327,362,0.509,363,0.92,364,0.509,365,0.92,366,0.92,367,0.92,368,0.92,369,2.895,370,0.92,371,2.804,372,0.92,373,0.92,374,0.92,375,0.92,376,0.92,377,0.92,378,0.92,379,0.92,380,2.804,381,0.92,382,1.989,383,1.258,384,0.92,385,1.782,386,0.509,387,1.541,388,1.541,389,0.509,390,1.258,391,1.541,392,1.541,393,1.782,394,1.258,395,1.782,396,0.509,397,1.258,398,2.804,399,1.541,400,0.509,401,0.92,402,0.509,403,0.509,404,0.509,405,0.509,406,1.258,407,0.92,408,1.258,409,0.92,410,0.92,411,0.509,412,0.509,413,0.509,414,0.92,415,0.509,416,1.541,417,1.541,418,0.509,419,0.509,420,0.509,421,0.509,422,0.509,423,0.509,424,0.92,425,1.782,426,0.509,427,0.509,428,1.541,429,1.258,430,1.258,431,0.92,432,0.509,433,0.92,434,1.541,435,0.509,436,0.509,437,0.509,438,0.509,439,0.92,440,0.509,441,0.509,442,0.509,443,0.509]],["title/coverage.html",[444,2.362]],["body/coverage.html",[0,1.193,1,0.98,9,1.216,10,2.331,13,1.826,22,1.5,23,0.081,42,0.98,46,0.068,47,0.068,70,1.855,81,2.331,82,2.331,225,1.855,298,2.598,444,2.331,445,3.054,446,3.054,447,3.054,448,3.054,449,3.054,450,3.054,451,2.331,452,4.171,453,2.838,454,4.171,455,2.331,456,2.838,457,2.331,458,2.331,459,3.054,460,3.054]],["title/dependencies.html",[51,1.35,461,1.175]],["body/dependencies.html",[23,0.083,27,1.509,31,1.224,46,0.068,47,0.068,51,1.509,66,2.849,67,2.267,77,2.345,462,3.072,463,4.447,464,3.072,465,3.072,466,3.072,467,3.072,468,3.072,469,3.072,470,3.072,471,3.072,472,3.072,473,3.072,474,3.072,475,3.072,476,3.072,477,3.072,478,3.072,479,3.072]],["title/index.html",[19,0.95,480,1.933,481,1.933]],["body/index.html",[0,1.203,4,1.05,23,0.062,40,1.602,46,0.062,47,0.062,59,1.295,83,2.012,156,2.012,225,1.602,461,1.602,482,2.636,483,3.391,484,2.636,485,3.748,486,3.748,487,2.012,488,2.636,489,2.636,490,3.391,491,4.094,492,4.262,493,2.636,494,2.636,495,2.636,496,2.636,497,2.636,498,2.636,499,2.636,500,2.636,501,2.636,502,2.636,503,2.636,504,3.748,505,3.748,506,2.636,507,3.957,508,2.636,509,2.636,510,2.636,511,2.636,512,3.391,513,3.391,514,3.957,515,2.636,516,3.391,517,3.391,518,2.636,519,4.191,520,2.636,521,2.636,522,2.636,523,3.391,524,2.636,525,2.636,526,2.636,527,2.636,528,2.636,529,3.748,530,2.636,531,2.636,532,2.636,533,1.602,534,2.636,535,2.636]],["title/modules.html",[50,1.232]],["body/modules.html",[23,0.073,46,0.073,47,0.073,49,1.698,50,1.377,56,1.377,67,2.1,536,3.457,537,3.457,538,4.002,539,3.457,540,3.457]],["title/overview.html",[533,1.88]],["body/overview.html",[1,1.419,2,1.895,23,0.079,42,1.298,46,0.068,47,0.068,49,2.206,50,1.242,51,1.85,52,2.381,53,2.381,54,2.381,55,2.381,56,1.611,57,2.875,58,1.895,59,1.532,298,1.895,533,1.895,541,3.766]],["title/properties.html",[20,1.35,461,1.175]],["body/properties.html",[20,1.733,23,0.077,46,0.074,47,0.074,487,2.694,542,3.528]],["title/routes.html",[76,1.88]],["body/routes.html",[23,0.074,46,0.074,47,0.074,76,2.166]],["title/miscellaneous/variables.html",[320,1.67,543,1.476]],["body/miscellaneous/variables.html",[19,1.505,22,2.051,23,0.082,25,2.439,26,2.439,46,0.068,47,0.068,211,2.338,230,2.338,272,2.843,320,1.861,451,2.338,453,3.188,455,2.338,456,2.338,457,2.843,458,2.843,543,2.338,544,3.724,545,3.063,546,3.063,547,3.063,548,3.724,549,3.063,550,3.724]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":298,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0'}}°c",{"_index":348,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["0.0.0",{"_index":542,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":409,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["0.1",{"_index":427,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["0.11.4",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":364,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["0/1",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0\\'}}°c",{"_index":443,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["0px",{"_index":416,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["1.0",{"_index":339,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["1.1.19",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":174,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["100px",{"_index":418,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["100vh",{"_index":424,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["102",{"_index":363,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["10px",{"_index":360,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["12/30",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["14.2.9",{"_index":488,"title":{},"body":{"index.html":{}}}],["17px",{"_index":383,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["18px",{"_index":432,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["2",{"_index":541,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["203px",{"_index":357,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["20px",{"_index":355,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["211",{"_index":401,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["30px",{"_index":399,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["4.0.2",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":442,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["40px",{"_index":396,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["45px",{"_index":386,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["48484a",{"_index":385,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["5",{"_index":342,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["500",{"_index":388,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["50px",{"_index":441,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["5px",{"_index":433,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["6",{"_index":299,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["600000",{"_index":250,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["60px",{"_index":415,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["680px",{"_index":440,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["7.5.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["77c680e8479d51757112c4f74394323f",{"_index":221,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["8px",{"_index":428,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["above",{"_index":152,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["actual_component",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["add",{"_index":525,"title":{},"body":{"index.html":{}}}],["align",{"_index":391,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["allforecastdata",{"_index":87,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["allforecastdata:any",{"_index":241,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["angular",{"_index":485,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":77,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":166,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["api_key",{"_index":88,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":497,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":56,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":123,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["arrays",{"_index":121,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["artifacts",{"_index":508,"title":{},"body":{"index.html":{}}}],["async",{"_index":106,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["auto",{"_index":422,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["automatically",{"_index":498,"title":{},"body":{"index.html":{}}}],["available",{"_index":540,"title":{},"body":{"modules.html":{}}}],["await",{"_index":259,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["background",{"_index":361,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["bold",{"_index":419,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":358,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["bottom",{"_index":436,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["browse",{"_index":538,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":507,"title":{},"body":{"index.html":{}}}],["c",{"_index":340,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["calculate",{"_index":183,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["calculated",{"_index":178,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["call",{"_index":251,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["called",{"_index":186,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["calls",{"_index":191,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["can't",{"_index":295,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["capabilities",{"_index":527,"title":{},"body":{"index.html":{}}}],["carried",{"_index":184,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["catch",{"_index":268,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["center",{"_index":393,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["centers",{"_index":421,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["change",{"_index":500,"title":{},"body":{"index.html":{}}}],["changed",{"_index":313,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["check",{"_index":532,"title":{},"body":{"index.html":{}}}],["choice",{"_index":522,"title":{},"body":{"index.html":{}}}],["city",{"_index":384,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{}}}],["clear",{"_index":254,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["clearinterval(this.intervalid",{"_index":253,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["cli",{"_index":486,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":502,"title":{},"body":{"index.html":{}}}],["color",{"_index":369,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["column",{"_index":430,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["combinedata",{"_index":102,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["combines",{"_index":120,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["combo",{"_index":89,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["combo:any",{"_index":244,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["command",{"_index":523,"title":{},"body":{"index.html":{}}}],["compares",{"_index":213,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["comparision",{"_index":135,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["compodoc/compodoc",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"overview.html":{}}}],["console.error(error",{"_index":270,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log",{"_index":248,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log('all",{"_index":289,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log('fivedayforecast",{"_index":310,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log('icon",{"_index":291,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log('temp",{"_index":288,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["console.log('the",{"_index":301,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["const",{"_index":78,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["container",{"_index":390,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["content",{"_index":395,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["context",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corresponding",{"_index":207,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["coverage",{"_index":444,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":214,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentdate",{"_index":90,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentmaxmin",{"_index":219,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentmaxmin.highestmax",{"_index":322,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentmaxmin.lowestmin",{"_index":323,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currenttime",{"_index":91,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata",{"_index":92,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.city",{"_index":335,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.description",{"_index":341,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.feelslike",{"_index":338,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.humidity",{"_index":352,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.pressure",{"_index":350,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata.temp}}°c",{"_index":336,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["currentweatherdata:any",{"_index":238,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["cursor",{"_index":411,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["d",{"_index":333,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["data_2",{"_index":195,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["date",{"_index":132,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["date:\"ee",{"_index":331,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["datetimestring",{"_index":138,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["datetimestring.slice(0",{"_index":327,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day",{"_index":148,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day's",{"_index":316,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day[0].highestmax",{"_index":346,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day[0].lowestmin",{"_index":347,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day[1].dt_txt",{"_index":343,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["day[1].weather[0].description",{"_index":349,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["daydetailsvisible",{"_index":93,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["days",{"_index":179,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["dd",{"_index":345,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["declarations",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["declared",{"_index":151,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":153,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["destroyed",{"_index":256,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["details",{"_index":204,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["dev",{"_index":494,"title":{},"body":{"index.html":{}}}],["development",{"_index":489,"title":{},"body":{"index.html":{}}}],["direction",{"_index":429,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["directives",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":506,"title":{},"body":{"index.html":{}}}],["directory",{"_index":511,"title":{},"body":{"index.html":{}}}],["display",{"_index":198,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["dist",{"_index":510,"title":{},"body":{"index.html":{}}}],["div",{"_index":410,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["dnone",{"_index":426,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["documentation",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["dynamic",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":520,"title":{},"body":{"index.html":{}}}],["ea6e4b",{"_index":381,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["eee",{"_index":344,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["end",{"_index":519,"title":{},"body":{"index.html":{}}}],["environment",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":269,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["execute",{"_index":516,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{}}}],["exports",{"_index":80,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extractdate",{"_index":103,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["extractdate(datetimestring",{"_index":129,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["false",{"_index":230,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":372,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["feels",{"_index":337,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fetch(`https://api.openweathermap.org/data/2.5/forecast?q=bad",{"_index":265,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fetch(`https://api.openweathermap.org/data/2.5/weather?q=bad",{"_index":260,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fetched",{"_index":190,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fetches",{"_index":162,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{}}}],["files",{"_index":501,"title":{},"body":{"index.html":{}}}],["findhighestmaxandlowestmin",{"_index":104,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["findhighestmaxandlowestmin(tempmaxmindata",{"_index":139,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["finds",{"_index":141,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["first",{"_index":156,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"index.html":{}}}],["fit",{"_index":423,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fivedaydata",{"_index":105,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fivedayforecast",{"_index":94,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fivedayforecast:any",{"_index":240,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["fivedayforecastpopulated",{"_index":95,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["flex",{"_index":380,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["font",{"_index":371,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["forcast",{"_index":164,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["forecast",{"_index":158,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["forecastdata",{"_index":96,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["forecastdata:any",{"_index":239,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["format",{"_index":194,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["function",{"_index":119,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["functions",{"_index":193,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["further",{"_index":528,"title":{},"body":{"index.html":{}}}],["generate",{"_index":504,"title":{},"body":{"index.html":{}}}],["generated",{"_index":484,"title":{},"body":{"index.html":{}}}],["geneva",{"_index":376,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["getting",{"_index":480,"title":{"index.html":{}},"body":{}}],["getweatherdata",{"_index":107,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["go",{"_index":531,"title":{},"body":{"index.html":{}}}],["gradient(180deg",{"_index":366,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["graph",{"_index":539,"title":{},"body":{"modules.html":{}}}],["h3",{"_index":402,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["height",{"_index":356,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["help",{"_index":529,"title":{},"body":{"index.html":{}}}],["here",{"_index":187,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["hh:mm",{"_index":334,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["hidden",{"_index":206,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["high",{"_index":216,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["highest",{"_index":145,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["highestmax",{"_index":97,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["hook",{"_index":171,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["hover",{"_index":407,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["hpahumidity",{"_index":351,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["http://localhost:4200",{"_index":496,"title":{},"body":{"index.html":{}}}],["humidity",{"_index":437,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["icon",{"_index":389,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["icons",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":414,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["implements",{"_index":83,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{}}}],["important",{"_index":425,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{}}}],["initally",{"_index":317,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["initially",{"_index":149,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["initiates",{"_index":169,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["interval",{"_index":255,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["intervalid",{"_index":98,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["items",{"_index":392,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["jsdoc",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":394,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["karma",{"_index":518,"title":{},"body":{"index.html":{}}}],["key",{"_index":245,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["last",{"_index":324,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["left",{"_index":353,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["length",{"_index":296,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["li",{"_index":404,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["lifecycle",{"_index":170,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["linear",{"_index":365,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["list",{"_index":294,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["literal",{"_index":211,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["loop",{"_index":126,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["low",{"_index":217,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["lowest",{"_index":142,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["lowestmin",{"_index":99,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["main.component",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["main.component.html",{"_index":86,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.scss",{"_index":85,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts",{"_index":82,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"coverage.html":{}}}],["main.component.ts:11",{"_index":226,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:115",{"_index":154,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:129",{"_index":181,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:13",{"_index":227,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:14",{"_index":232,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:155",{"_index":118,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:16",{"_index":222,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:177",{"_index":140,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:18",{"_index":229,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:19",{"_index":220,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:20",{"_index":237,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:209",{"_index":130,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:21",{"_index":236,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:22",{"_index":223,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:221",{"_index":177,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:237",{"_index":212,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:24",{"_index":231,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:252",{"_index":202,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:26",{"_index":228,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:28",{"_index":224,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:29",{"_index":233,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:30",{"_index":235,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:31",{"_index":234,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:38",{"_index":168,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:47",{"_index":167,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:55",{"_index":161,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:74",{"_index":197,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:8",{"_index":117,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main.component.ts:95",{"_index":189,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["main/weather",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{}}}],["margin",{"_index":398,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["matching",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":146,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["media(max",{"_index":439,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["methods",{"_index":101,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["milliseconds",{"_index":252,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["min",{"_index":143,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["minutes",{"_index":175,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["miscellaneous",{"_index":543,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":332,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":530,"title":{},"body":{"index.html":{}}}],["muss",{"_index":297,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"index.html":{}}}],["navigate",{"_index":495,"title":{},"body":{"index.html":{}}}],["need",{"_index":524,"title":{},"body":{"index.html":{}}}],["needed",{"_index":182,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["new",{"_index":225,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":192,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["ng",{"_index":492,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":125,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["ngmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":108,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["ngoninit",{"_index":109,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["none",{"_index":406,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["number",{"_index":201,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["object",{"_index":272,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":84,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["openweathermap",{"_index":165,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["optional",{"_index":137,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["out",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"index.html":{},"overview.html":{}}}],["outside",{"_index":325,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["overview",{"_index":533,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":461,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":354,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["page",{"_index":535,"title":{},"body":{"index.html":{}}}],["param",{"_index":271,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["parameters",{"_index":136,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["platform",{"_index":521,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":412,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["populated",{"_index":311,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["previous",{"_index":315,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["production",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":483,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"properties.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["push",{"_index":314,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["pushes",{"_index":159,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["pushresults",{"_index":110,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["pushresults(results",{"_index":176,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["radius",{"_index":359,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["record",{"_index":157,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["record.main.temp_max",{"_index":329,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["record.main.temp_min",{"_index":330,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["records",{"_index":160,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["reference",{"_index":534,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":131,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["reload",{"_index":499,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":249,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["require",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":134,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["reset",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"overview.html":{}}}],["response",{"_index":258,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["response.json",{"_index":262,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["response_2",{"_index":264,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["response_2.json",{"_index":266,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["result",{"_index":180,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["resultant",{"_index":122,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["results",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":328,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["results:any",{"_index":243,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["return",{"_index":326,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["returns",{"_index":127,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["reults",{"_index":302,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rgb(218",{"_index":400,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rgba(0",{"_index":408,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rgba(0,0,0,1",{"_index":367,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rgba(190",{"_index":362,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rgba(8,7,42,1",{"_index":368,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["right",{"_index":397,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["rodach&appid=${this.api_key}&units=metric",{"_index":261,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["routermodule",{"_index":75,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":79,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":76,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":74,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":420,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["run",{"_index":491,"title":{},"body":{"index.html":{}}}],["running",{"_index":512,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["sans",{"_index":378,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["scaffolding",{"_index":503,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":373,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["selectdata",{"_index":111,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["selects",{"_index":155,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["serif",{"_index":379,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["serve",{"_index":493,"title":{},"body":{"index.html":{}}}],["server",{"_index":490,"title":{},"body":{"index.html":{}}}],["setforecastdata",{"_index":112,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["setforecastdata(data_2",{"_index":188,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["setinterval",{"_index":172,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["setweatherdata",{"_index":113,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["setweatherdata(data",{"_index":196,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["size",{"_index":382,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherAppMainComponent.html":{},"index.html":{}}}],["span",{"_index":435,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["spec\\.ts",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":73,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/weather",{"_index":81,"title":{},"body":{"components/WeatherAppMainComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":431,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["started",{"_index":481,"title":{"index.html":{}},"body":{}}],["statements",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":509,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["style",{"_index":405,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["subsequent",{"_index":185,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["support",{"_index":536,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":537,"title":{},"body":{"modules.html":{}}}],["table",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["tahoma",{"_index":375,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["temperature",{"_index":144,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["tempmaxmindata",{"_index":100,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["tempmaxmindata:any",{"_index":242,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["test",{"_index":515,"title":{},"body":{"index.html":{}}}],["testing",{"_index":526,"title":{},"body":{"index.html":{}}}],["tests",{"_index":514,"title":{},"body":{"index.html":{}}}],["text",{"_index":438,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.combo",{"_index":309,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.combo.length",{"_index":305,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.combo.push([el",{"_index":307,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata",{"_index":273,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.city",{"_index":276,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.description",{"_index":282,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.feelslike",{"_index":280,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.humidity",{"_index":286,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.icon",{"_index":278,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.main.feels_like",{"_index":281,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.main.humidity",{"_index":287,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.main.pressure",{"_index":285,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.main.temp.tofixed(0",{"_index":275,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.name",{"_index":277,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.pressure",{"_index":284,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.temp",{"_index":274,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.weather[0].description",{"_index":283,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.currentweatherdata.weather[0].icon",{"_index":279,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.extractdate(record.dt_txt",{"_index":312,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.fivedayforecast",{"_index":293,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.fivedayforecast[index",{"_index":308,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.fivedayforecastpopulated",{"_index":304,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.forecastdata",{"_index":292,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.getweatherdata",{"_index":246,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.intervalid",{"_index":247,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.pushresults(results",{"_index":319,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.results",{"_index":303,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.results.foreach((el",{"_index":306,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.results.pop",{"_index":300,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.setforecastdata(data_2",{"_index":267,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.setweatherdata(data",{"_index":263,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["this.updatehighestmaxlowestmin({highestmax",{"_index":321,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":199,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["todays",{"_index":163,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["toggledaydetails",{"_index":114,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["toggledaydetails(index",{"_index":200,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["toggles",{"_index":203,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["top",{"_index":434,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["transparent",{"_index":413,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["true",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true/false",{"_index":209,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["try",{"_index":257,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["tslib",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":374,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["ul",{"_index":403,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["undef",{"_index":318,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["undefined",{"_index":150,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["unit",{"_index":513,"title":{},"body":{"index.html":{}}}],["update",{"_index":173,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["updated",{"_index":218,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["updatehighestmaxlowestmin",{"_index":115,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["updatehighestmaxlowestmin(currentmaxmin",{"_index":210,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["use",{"_index":505,"title":{},"body":{"index.html":{}}}],["used",{"_index":124,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":215,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherAppMainComponent.html":{}}}],["variable",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":320,"title":{"miscellaneous/variables.html":{}},"body":{"components/WeatherAppMainComponent.html":{},"miscellaneous/variables.html":{}}}],["verdana",{"_index":377,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["version",{"_index":487,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":517,"title":{},"body":{"index.html":{}}}],["visible",{"_index":205,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["void",{"_index":128,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["weather",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"dependencies.html":{}}}],["weather',this.currentweatherdata",{"_index":290,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["weatherapp",{"_index":482,"title":{},"body":{"index.html":{}}}],["weatherappmaincomponent",{"_index":42,"title":{"components/WeatherAppMainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherAppMainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weight",{"_index":387,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["white",{"_index":370,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["width",{"_index":417,"title":{},"body":{"components/WeatherAppMainComponent.html":{}}}],["zone.js",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'weather-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherAppMainComponent', 'selector': 'app-weather-app-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nWeatherAppMainComponent\n\nWeatherAppMainComponent\n\nAppModule -->\n\nWeatherAppMainComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            WeatherAppMainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WeatherAppMainComponent } from './weather-app-main/weather-app-main.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherAppMainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherAppMainComponent.html":{"url":"components/WeatherAppMainComponent.html","title":"component - WeatherAppMainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WeatherAppMainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather-app-main/weather-app-main.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-app-main\n            \n\n            \n                styleUrls\n                ./weather-app-main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-app-main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allForecastData\n                            \n                            \n                                API_Key\n                            \n                            \n                                combo\n                            \n                            \n                                currentDate\n                            \n                            \n                                currentTime\n                            \n                            \n                                currentWeatherData\n                            \n                            \n                                dayDetailsVisible\n                            \n                            \n                                fiveDayForecast\n                            \n                            \n                                fiveDayForecastPopulated\n                            \n                            \n                                forecastData\n                            \n                            \n                                highestMax\n                            \n                            \n                                intervalId\n                            \n                            \n                                lowestMin\n                            \n                            \n                                results\n                            \n                            \n                                tempMaxMinData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                combineData\n                            \n                            \n                                extractDate\n                            \n                            \n                                findHighestMaxAndLowestMin\n                            \n                            \n                                fiveDayData\n                            \n                            \n                                    Async\n                                getWeatherData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                pushResults\n                            \n                            \n                                selectData\n                            \n                            \n                                setForecastData\n                            \n                            \n                                setWeatherData\n                            \n                            \n                                toggleDayDetails\n                            \n                            \n                                updateHighestMaxLowestMin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        combineData\n                        \n                    \n                \n            \n            \n                \ncombineData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:155\n                \n            \n\n\n            \n                \n                    This function combines the arrays results and fiveDayForecast so that the resultant array\ncan be used in *ngFor loop in weather-app-main.component.html\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractDate\n                        \n                    \n                \n            \n            \n                \nextractDate(dateTimeString)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:209\n                \n            \n\n\n            \n                \n                    This function returns just the relevant date data required for comparision.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateTimeString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findHighestMaxAndLowestMin\n                        \n                    \n                \n            \n            \n                \nfindHighestMaxAndLowestMin(tempMaxMinData, currentDate, highestMax, lowestMin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:177\n                \n            \n\n\n            \n                \n                    This function finds the lowest min temperature and highest Max temperature for each day\ncurrentDate, highestMax, lowestMin are initially undefined (declared above)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tempMaxMinData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    currentDate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        | undefined;\n\n                                    \n                                \n                                \n                                    highestMax\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        | undefined;\n\n                                    \n                                \n                                \n                                    lowestMin\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        | undefined;\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fiveDayData\n                        \n                    \n                \n            \n            \n                \nfiveDayData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:115\n                \n            \n\n\n            \n                \n                    This function selects the first record of each date for the forecast data\nthen pushes the resultant records to the array fiveDayForecast\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWeatherData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:55\n                \n            \n\n\n            \n                \n                    This function fetches weather data (todays & forcast) from the openweathermap API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:38\n                \n            \n\n\n            \n                \n                    This function initiates the component with the lifecycle hook ngOnInit()\nsetInterval is then used to update the data every 10 minutes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushResults\n                        \n                    \n                \n            \n            \n                \npushResults(results, currentDate, highestMax, lowestMin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:221\n                \n            \n\n\n            \n                \n                    This function pushes the Calculated days result to the results array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentDate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highestMax\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lowestMin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectData\n                        \n                    \n                \n            \n            \n                \nselectData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:129\n                \n            \n\n\n            \n                \n                    This function selects out only the relevant data needed to calculate the\nhighest Max and lowest Min for each date... carried out in\nsubsequent function: findHighestMaxAndLowestMin() called here.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForecastData\n                        \n                    \n                \n            \n            \n                \nsetForecastData(data_2)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:95\n                \n            \n\n\n            \n                \n                    This function pushes the fetched forecast data to the array \"allForecastData\"\nthen calls the next functions required to format the data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data_2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWeatherData\n                        \n                    \n                \n            \n            \n                \nsetWeatherData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:74\n                \n            \n\n\n            \n                \n                    This function selects weather data for display for today\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDayDetails\n                        \n                    \n                \n            \n            \n                \ntoggleDayDetails(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:252\n                \n            \n\n\n            \n                \n                    This function toggles the details for each day of the forecast -- visible / hidden.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex of weather details for that day with corresponding boolean true/false\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHighestMaxLowestMin\n                        \n                    \n                \n            \n            \n                \nupdateHighestMaxLowestMin(currentMaxMin: literal type, record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-app-main/weather-app-main.component.ts:237\n                \n            \n\n\n            \n                \n                    This function compares current highest and lowest values for the day with record from the loop\nif they are the lowest or highest the corresponding current high or low is updated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentMaxMin\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    record\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allForecastData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_Key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '77c680e8479d51757112c4f74394323f'\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentWeatherData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayDetailsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fiveDayForecast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fiveDayForecastPopulated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forecastData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highestMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intervalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowestMin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempMaxMinData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/weather-app-main/weather-app-main.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-app-main',\n  templateUrl: './weather-app-main.component.html',\n  styleUrls: ['./weather-app-main.component.scss']\n})\nexport class WeatherAppMainComponent implements OnInit {\n  constructor() { }\n\n  currentTime = new Date();\n\n  currentWeatherData:any ={};\n  forecastData:any = {};\n\n  API_Key = '77c680e8479d51757112c4f74394323f'\n\n  fiveDayForecast:any = [];\n  allForecastData:any = [];\n  tempMaxMinData:any = [];\n  results:any = [];\n  combo:any = [];\n\n  fiveDayForecastPopulated = false;\n\n  dayDetailsVisible: { [key: number]: boolean } = {};\n\n  currentDate: string | undefined;\n  highestMax: number | undefined;\n  lowestMin: number | undefined;\n  intervalId: any;\n\n\n  /**\n   * This function initiates the component with the lifecycle hook ngOnInit()\n   * setInterval is then used to update the data every 10 minutes\n   */\n  ngOnInit(): void {\n    this.getWeatherData();\n    this.intervalId = setInterval(()=> {\n      this.getWeatherData();\n      console.log('******************* RELOADED ******************************')\n    }, 600000);   // Call getWeatherData() every 600000 milliseconds (10 minutes)\n  }\n\n\n  ngOnDestroy(): void {\n    clearInterval(this.intervalId); // Clear the interval when the component is destroyed\n  }\n\n\n /**\n  * This function fetches weather data (todays & forcast) from the openweathermap API\n  */\n  async getWeatherData() {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Bad Rodach&appid=${this.API_Key}&units=metric`);\n      const data = await response.json();\n      this.setWeatherData(data);\n  \n      const response_2 = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=Bad Rodach&appid=${this.API_Key}&units=metric`);\n      const data_2 = await response_2.json();\n      this.setForecastData(data_2);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n\n  /**\n   * This function selects weather data for display for today\n   * @param {object} data \n   */\n  setWeatherData(data){\n    this.currentWeatherData = data;\n    this.currentWeatherData.temp = this.currentWeatherData.main.temp.toFixed(0);\n    this.currentWeatherData.city = this.currentWeatherData.name;\n    this.currentWeatherData.icon = this.currentWeatherData.weather[0].icon;\n    this.currentWeatherData.feelsLike = this.currentWeatherData.main.feels_like;\n    this.currentWeatherData.description = this.currentWeatherData.weather[0].description;\n    this.currentWeatherData.pressure = this.currentWeatherData.main.pressure;\n    this.currentWeatherData.humidity = this.currentWeatherData.main.humidity;\n\n    console.log('temp', this.currentWeatherData.temp)\n    console.log('all weather',this.currentWeatherData);\n    console.log('icon', this.currentWeatherData.icon);\n  }\n\n\n  /**\n   * This function pushes the fetched forecast data to the array \"allForecastData\"\n   * then calls the next functions required to format the data\n   * @param {object} data_2\n   */\n  setForecastData(data_2){\n    this.forecastData = data_2;\n    // clear the array\n    this.fiveDayForecast = [];\n    // .list is used here because we can't get the length of an object muss be an array...\n    //all forecast data\n    for (let i = 0; i = 6){\n      this.results.pop();\n    }\n    console.log('the reults', this.results);\n  }\n\n\n  /**\n   * This function combines the arrays results and fiveDayForecast so that the resultant array\n   * can be used in *ngFor loop in weather-app-main.component.html\n   */\n  combineData(){\n    if (this.fiveDayForecastPopulated){\n      this.combo.length = 0;\n      this.results.forEach((el, index) => this.combo.push([el, this.fiveDayForecast[index]]));\n\n      console.log('the combo', this.combo)\n    } else {\n      console.log('fiveDayForecast not populated yet')\n    }\n    \n  }\n\n\n  /**\n   * This function finds the lowest min temperature and highest Max temperature for each day\n   * currentDate, highestMax, lowestMin are initially undefined (declared above)\n   * @param {array} tempMaxMinData \n   * @param {string} currentDate | undefined;\n   * @param {number} highestMax | undefined;\n   * @param {number} lowestMin | undefined;\n   * @returns \n   */\n  findHighestMaxAndLowestMin(tempMaxMinData, currentDate, highestMax, lowestMin ) {\n    //reset results array\n    const results = [];\n    for (const record of tempMaxMinData) {\n      const date = this.extractDate(record.dt_txt);\n      if (date !== currentDate) {\n        // If the date has changed, push the previous day's results into the array.. initally undef \n        if (currentDate) {\n          this.pushResults(results, currentDate, highestMax, lowestMin);\n        }\n        // Reset the variables for the new day\n        currentDate = date;\n        highestMax = undefined;\n        lowestMin = undefined;\n      }\n      const currentMaxMin = this.updateHighestMaxLowestMin({highestMax, lowestMin}, record);\n      highestMax = currentMaxMin.highestMax;\n      lowestMin = currentMaxMin.lowestMin;\n    }\n    // Push the results for the last day as there is no other date for comparision (outside of for loop)\n    if (currentDate) {\n      this.pushResults(results, currentDate, highestMax, lowestMin);\n    }\n    return results;\n  }\n\n\n  /**\n   * This function returns just the relevant date data required for comparision.\n   * @param {string} dateTimeString \n   * @returns \n   */\n  extractDate(dateTimeString) {\n    return dateTimeString.slice(0, 10);\n  }\n\n\n/**\n * This function pushes the Calculated days result to the results array\n * @param {array} results \n * @param {string} currentDate\n * @param {number} highestMax \n * @param {number} lowestMin  \n */\n  pushResults(results, currentDate, highestMax, lowestMin) {\n    results.push({\n      date: currentDate,\n      highestMax: highestMax,\n      lowestMin: lowestMin,\n    });\n  }\n\n\n  /**\n   * This function compares current highest and lowest values for the day with record from the loop \n   * if they are the lowest or highest the corresponding current high or low is updated.\n   * @param {object} currentMaxMin \n   * @param {object} record \n   * @returns \n   */\n  updateHighestMaxLowestMin(currentMaxMin: {highestMax, lowestMin}, record): {highestMax, lowestMin} {\n    const highestMax = currentMaxMin.highestMax === undefined || record.main.temp_max > currentMaxMin.highestMax\n      ? record.main.temp_max\n      : currentMaxMin.highestMax;\n    const lowestMin = currentMaxMin.lowestMin === undefined || record.main.temp_min \n    \n\n    \n        \n    \n\n    \n    \n        {{ currentTime| date:\"EE MMM d HH:mm\" }}\n        {{currentWeatherData.city}}\n        \n\n        \n            \n        \n        {{currentWeatherData.temp}}°C\n        \n        Feels like: {{ currentWeatherData.feelsLike | number: '1.0-0'}} °C. \n            {{ currentWeatherData.description }}\n        \n    \n\n    \n        \n            5 Day Forecast\n            \n            \n                \n                    \n                    \n                        \n                    {{ day[1].dt_txt | date: 'EEE, MMM dd' }}\n                    \n                    {{ day[0].highestMax | number: '1.0-0'}}  / {{ day[0].lowestMin | number: '1.0-0'}}°C \n                     {{ day[1].weather[0].description }}\n                    \n                    \n                    \n                    \n                        \n                        \n                            {{ day[1].weather[0].description }}\n                            The high will be {{ day[0].highestMax | number: '1.0-0'}} °C The low will be {{ day[0].lowestMin | number: '1.0-0'}} °C \n                            \n                                {{ currentWeatherData.pressure }} hPaHumidity: {{ currentWeatherData.humidity }}%\n                            \n\n                        \n                        \n                        \n                        \n                    \n                    \n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n\n    \n\n    \n                \n                    ./weather-app-main.component.scss\n                \n                #weather-main-left {\n  padding: 20px;\n  height: 203px;\n  border-radius: 10px;\n  background: rgba(190, 102, 102, 0.5);\n  // background: linear-gradient(180deg, rgba(0,0,0,1) 0%, rgba(8,7,42,1));\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.main{\n    display: flex;\n}\n\n.date {\n  color: #ea6e4b;\n  font-size: 17px;\n}\n\n.city {\n  color: #48484a;\n  font-size: 45px;\n  font-weight: 500;\n}\n\n.icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  color: #48484a;\n}\n\n.description {\n  color: #48484a;\n  font-size: 17px;\n  font-weight: 500;\n}\n\n#weather-main-right {\n  padding: 20px;\n  margin-left: 30px;\n  border-radius: 10px;\n  background: rgb(218, 211, 211);\n  // background: linear-gradient(180deg, rgba(0,0,0,1) 0%, rgba(8,7,42,1));\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  h3 {\n    margin: 0;\n    color: #ea6e4b;\n  }\n}\n\nul {\n  padding: 0;\n}\n\nli {\n    list-style-type: none;\n    border-radius: 30px;\n    :hover {\n        background-color: rgba(0, 0, 0, 0.05);\n        \n      }\n    div {\n      display: flex;\n      align-items: center;\n      color: #48484a;\n      cursor: pointer;\n      :hover {\n        background-color: transparent;\n      }\n      \n    }\n    img {\n        height: 60px;\n        margin: 0px 0px 0px 0px;\n      }\n  }\n  \n  \n\n.forecast-date {\n  width: 100px;\n}\n\n.bold{\n    font-weight: 500;\n}\n\n.forecast-description {\n  margin-left: 10px;\n}\n\n.component-row {\n  //centers div\n  margin: 0 auto;\n  width: fit-content;\n}\n\n.weather-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh !important;\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.dnone{\n    display: none !important;\n}\n\n.day-details{\n    background-color: rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n    padding: 8px;\n}\n\n.day-details-content{\n    display: flex !important;\n    flex-direction: column;\n    align-items: flex-start !important;\n    img{\n        height: 18px;\n        margin-right: 5px;\n        margin-top: 8px;\n    }\n    span{\n        margin-top: 5px;\n    }\n   \n}\n\n.day-details-description{\n    color: #48484a;\n  font-size: 17px;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.humidity-text{\n    \n    margin-left: 30px;\n}\n\n@media(max-width: 680px){\n    .main{\n        display: flex;\n        flex-direction: column;\n\n }\n #weather-main-right{\n    margin-left: 0;\n    margin-top: 20px;\n }\n\n .weather-container {\n    display: flex;\n    height: 100vh !important;\n    flex-direction: column;\n    justify-content: flex-start;\n    padding-top: 50px;\n  }\n\n }\n\n @media(max-width: 400px){\n    .city{\n        font-size: 30px;\n    }\n    .forecast-description{\n        display: none;\n    }\n }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ currentTime| date:\"EE MMM d HH:mm\" }}        {{currentWeatherData.city}}                                            {{currentWeatherData.temp}}°C                Feels like: {{ currentWeatherData.feelsLike | number: \\'1.0-0\\'}} °C.             {{ currentWeatherData.description }}                                    5 Day Forecast                                                                                                                            {{ day[1].dt_txt | date: \\'EEE, MMM dd\\' }}                                        {{ day[0].highestMax | number: \\'1.0-0\\'}}  / {{ day[0].lowestMin | number: \\'1.0-0\\'}}°C                      {{ day[1].weather[0].description }}                                                                                                                                                            {{ day[1].weather[0].description }}                            The high will be {{ day[0].highestMax | number: \\'1.0-0\\'}} °C The low will be {{ day[0].lowestMin | number: \\'1.0-0\\'}} °C                                                             {{ currentWeatherData.pressure }} hPaHumidity: {{ currentWeatherData.humidity }}%                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherAppMainComponent', 'selector': 'app-weather-app-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherAppMainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/weather-app-main/weather-app-main.component.ts\n            \n            component\n            WeatherAppMainComponent\n            \n                40 %\n                (12/30)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            jsdoc : ^4.0.2\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            weather-icons : ^1.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherApp\nThis project was generated with Angular CLI version 14.2.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nWeatherAppMainComponent\n\nWeatherAppMainComponent\n\nAppModule -->\n\nWeatherAppMainComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
